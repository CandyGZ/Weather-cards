{"version":3,"sources":["App.module.css","components/Cards.module.css","components/Card.jsx","components/Cards.jsx","components/SearchBar.jsx","data.js","App.js","index.js"],"names":["module","exports","Card","props","max","min","name","img","onClose","className","onClick","Math","round","src","alt","Cards","console","log","cities","styles","cards","map","city","main","temp_min","temp_max","weather","icon","SearchBar","OnSearch","searchCity","document","getElementById","value","type","id","placeholder","classNAme","Cairns","JSON","parse","Londres","Denver","App","app","bkg","container","citiesContainer","temp","alert","data","onSearch","ciudad","ReactDOM","render"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,IAAM,iBAAiB,IAAM,iBAAiB,UAAY,uBAAuB,gBAAkB,+B,kBCArHD,EAAOC,QAAU,CAAC,MAAQ,uB,mGCCX,SAASC,EAAKC,GAI3B,IAAQC,EAAiCD,EAAjCC,IAAKC,EAA4BF,EAA5BE,IAAKC,EAAuBH,EAAvBG,KAAMC,EAAiBJ,EAAjBI,IAAKC,EAAYL,EAAZK,QAC7B,OACE,gCACE,qBAAKC,UAAU,OAAOC,QAASF,EAA/B,SACE,2CAEF,6BAAKF,IACL,sBAAKG,UAAU,WAAf,UACE,sBAAKA,UAAU,SAAf,UACE,8BACE,2CAEF,8BACE,+BACG,IACAE,KAAKC,MAAMP,EAAM,IAFpB,QAE2BM,KAAKC,MAAMR,EAAM,IAF5C,OAEkD,YAKtD,sBAAKK,UAAU,SAAf,UACE,qBACEI,IAAG,2CAAsCN,EAAtC,WACHO,IAAI,iBACH,a,oBC1BE,SAASC,EAAMZ,GAG5Ba,QAAQC,IAAId,GAEZ,IAAQe,EAAWf,EAAXe,OAGR,OACE,qBAAKT,UAAWU,IAAOC,MAAvB,SACGF,EAAOG,KAAI,SAACC,GAAD,OACV,cAACpB,EAAD,CAEEI,KAAMgB,EAAKhB,KACXD,IAAKiB,EAAKC,KAAKC,SACfpB,IAAKkB,EAAKC,KAAKE,SACflB,IACEe,EAAKI,QAAQ,GAAGC,MALbL,EAAKhB,WCdL,SAASsB,EAAUzB,GAIhC,IAAQ0B,EAAa1B,EAAb0B,SACFC,EAAaC,SAASC,eAAe,gBAAgBC,OAC3D,OACE,gCACE,uBAAOC,KAAK,OAAOC,GAAG,gBAAgBC,YAAY,cAClD,wBACEC,UAAU,eACVF,GAAG,eACHzB,QAAS,kBAAMmB,EAASC,IAH1B,qBAMU,OCjBT,IAAMQ,EAASC,KAAKC,MAAL,0cAETC,EAAUF,KAAKC,MAAL,+cAEVE,EAASH,KAAKC,MAAL,2cAIPtB,EAFF,CAACuB,EAASH,EAAQI,G,gBC0BhBC,MAzBf,WACE,OACE,sBAAKlC,UAAWU,IAAOyB,IAAvB,UACE,qBAAKnC,UAAWU,IAAO0B,MACvB,sBAAKpC,UAAWU,IAAO2B,UAAvB,UACE,qBAAKrC,UAAWU,IAAO4B,gBAAvB,SACE,cAAC7C,EAAD,CACEE,IAAKkC,EAAOf,KAAKyB,KAAK5C,IACtBC,IAAKiC,EAAOf,KAAKyB,KAAK3C,IACtBC,KAAMgC,EAAOhC,KACbC,IAAK+B,EAAOZ,QAAQ,GAAGC,KACvBnB,QAAS,kBAAMyC,MAAMX,EAAOhC,WAGhC,8BACE,cAACS,EAAD,CAAOG,OAAQgC,MAEjB,8BACE,cAACtB,EAAD,CAAWuB,SAAU,SAACC,GAAD,OAAYH,MAAMG,eCpBjDC,IAASC,OACL,cAAC,EAAD,IACFvB,SAASC,eAAe,W","file":"static/js/main.ff62b93c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__vUUY_\",\"bkg\":\"App_bkg__F3oMd\",\"container\":\"App_container__Fr-Nd\",\"citiesContainer\":\"App_citiesContainer__1LvfK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cards\":\"Cards_cards__22ZsF\"};","import React from \"react\";\n\nexport default function Card(props) {\n  // acá va tu código\n  // origen imagen \"http://openweathermap.org/img/wn/${props.img}@2x.png\"\n  //Alt 0176 para símbolo de grados\n  const { max, min, name, img, onClose } = props;\n  return (\n    <div>\n      <div className=\"dcha\" onClick={onClose}>\n        <button> X </button>\n      </div>\n      <h2>{name}</h2>\n      <div className=\"centrado\">\n        <div className=\"aside1\">\n          <div>\n            <h2>Min Max</h2>\n          </div>\n          <div>\n            <h2>\n              {\" \"}\n              {Math.round(min / 10)}° {Math.round(max / 10)}°{\" \"}\n            </h2>\n          </div>\n        </div>\n\n        <div className=\"aside2\">\n          <img\n            src={`http://openweathermap.org/img/wn/${img}@2x.png`}\n            alt=\"imagen clima\"\n          />{\" \"}\n          {/*la dirección va entre backsticks, no comillas  */}\n        </div>\n      </div>\n    </div>\n  );\n\n  /* otra forma*/\n  /*sin descontrucción, usando props \n  return (\n    <div>\n      <button> X </button>\n      <h4>{props.name}</h4>\n      <p>Min</p>\n      <p>{props.min}</p>\n      etc. */\n}\n","import React from \"react\";\nimport Card from \"./Card\";\nimport styles from \"./Cards.module.css\";\n\nexport default function Cards(props) {\n  // acá va tu código\n  //Cards nos manda data en un atributo que se llama cities, linea 23 de App.js, si se pudiera modificar la linea 4 se sustituye props por cities y es más facil\n  console.log(props); // vemos que trae un array de cities\n  //podria destructurarse así:\n  const { cities } = props;\n  //console.log(cities);\n\n  return (\n    <div className={styles.cards}>\n      {cities.map((city) => (\n        <Card\n          key={city.name}\n          name={city.name}\n          min={city.main.temp_min}\n          max={city.main.temp_max}\n          img={\n            city.weather[0].icon\n          } /*en ek archivo data vemos de dónde vienen los datos y el nombre  */\n        />\n      ))}\n    </div>\n  );\n\n  // otra forma es copiando todos los datos que nos piden de APP.js sustituyendo Cairns por el nombre de la función\n  // return <div>Cards Component</div>;\n  /*   props.cities?.map(c => (\n    <Card\n      key={c.id}\n      max={c.main.temp_max}\n      min={c.main.temp_min}\n      name={c.name}\n      img={c.weather[0]}.icon}\n      onClose={() => alert(c.name)}\n  ) */\n}\n","import React from \"react\";\n\nexport default function SearchBar(props) {\n  // acá va tu código\n  // onSearch={(ciudad) => alert(ciudad)}\n  //destructuring:\n  const { OnSearch } = props;\n  const searchCity = document.getElementById(\"search_ciudad\".value); //OJO, no es parte de la tarea, es solo una prueba\n  return (\n    <div>\n      <input type=\"text\" id=\"search_ciudad\" placeholder=\"Ciudad...\" />\n      <button\n        classNAme=\"searchButton\"\n        id=\"searchButton\"\n        onClick={() => OnSearch(searchCity)}\n      >\n        Agregar\n      </button>{\" \"}\n      {/* sin parentesis se ejecutaria al ejecutarse el código */}\n    </div>\n  );\n  //return <div>Search Bar Component</div>;\n}\n","export const Cairns = JSON.parse(`{\"coord\":{\"lon\":145.77,\"lat\":-16.92},\"weather\":[{\"id\":802,\"main\":\"Clouds\",\"description\":\"scattered clouds\",\"icon\":\"03n\"}],\"base\":\"stations\",\"main\":{\"temp\":300.15,\"pressure\":1007,\"humidity\":74,\"temp_min\":300.15,\"temp_max\":300.15},\"visibility\":10000,\"wind\":{\"speed\":3.6,\"deg\":160},\"clouds\":{\"all\":40},\"dt\":1485790200,\"sys\":{\"type\":1,\"id\":8166,\"message\":0.2064,\"country\":\"AU\",\"sunrise\":1485720272,\"sunset\":1485766550},\"id\":2172797,\"name\":\"Cairns\",\"cod\":200}`);\n\nexport const Londres = JSON.parse(`{\"coord\":{\"lon\":-0.13,\"lat\":51.51},\"weather\":[{\"id\":300,\"main\":\"Drizzle\",\"description\":\"light intensity drizzle\",\"icon\":\"09d\"}],\"base\":\"stations\",\"main\":{\"temp\":280.32,\"pressure\":1012,\"humidity\":81,\"temp_min\":279.15,\"temp_max\":281.15},\"visibility\":10000,\"wind\":{\"speed\":4.1,\"deg\":80},\"clouds\":{\"all\":90},\"dt\":1485789600,\"sys\":{\"type\":1,\"id\":5091,\"message\":0.0103,\"country\":\"GB\",\"sunrise\":1485762037,\"sunset\":1485794875},\"id\":2643743,\"name\":\"London\",\"cod\":200}`);\n\nexport const Denver = JSON.parse(`{\"coord\":{\"lon\":-0.13,\"lat\":51.51},\"weather\":[{\"id\":300,\"main\":\"Drizzle\",\"description\":\"light intensity drizzle\",\"icon\":\"09d\"}],\"base\":\"stations\",\"main\":{\"temp\":280.32,\"pressure\":1012,\"humidity\":81,\"temp_min\":12.12,\"temp_max\":121},\"visibility\":10000,\"wind\":{\"speed\":4.1,\"deg\":80},\"clouds\":{\"all\":90},\"dt\":1485789600,\"sys\":{\"type\":1,\"id\":5091,\"message\":0.0103,\"country\":\"GB\",\"sunrise\":1485762037,\"sunset\":1485794875},\"id\":2643743,\"name\":\"Denver\",\"cod\":200}`);\n\nvar cities = [Londres, Cairns, Denver];\n\nexport default cities;\n","import React from \"react\";\nimport Card from \"./components/Card.jsx\";\nimport Cards from \"./components/Cards.jsx\";\nimport SearchBar from \"./components/SearchBar.jsx\";\nimport data, { Cairns } from \"./data.js\";\nimport styles from \"./App.module.css\";\n\nfunction App() {\n  return (\n    <div className={styles.app}>\n      <div className={styles.bkg} />\n      <div className={styles.container}>\n        <div className={styles.citiesContainer}>\n          <Card\n            max={Cairns.main.temp.max}\n            min={Cairns.main.temp.min}\n            name={Cairns.name}\n            img={Cairns.weather[0].icon}\n            onClose={() => alert(Cairns.name)}\n          />\n        </div>\n        <div>\n          <Cards cities={data} />\n        </div>\n        <div>\n          <SearchBar onSearch={(ciudad) => alert(ciudad)} />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}